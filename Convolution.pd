#N canvas 548 220 243 400 10;
#N canvas 13 193 1077 463 init 0;
#X obj 247 259 soundfiler;
#X obj 247 25 loadbang;
#X obj 217 29 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 711 331 print;
#X msg 702 309 window \$1;
#X floatatom 711 286 10 0 0 1 - - -;
#X obj 701 238 + 1;
#X floatatom 701 214 3 1 30 0 - - -;
#X msg 722 352 flush;
#X obj 866 304 metro 40;
#X obj 864 238 loadbang;
#X msg 864 260 1;
#X obj 865 283 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 865 328 s globalMetro;
#X obj 850 46 table arundelL;
#X obj 850 67 table arundelR;
#X obj 702 377 s convolveL;
#X obj 648 401 s convolveR;
#X obj 850 117 table tunnelR;
#X obj 850 96 table tunnelL;
#X msg 308 148 read -resize ./audio/ir-tunnel_L.wav tunnelL;
#X msg 348 168 read -resize ./audio/ir-tunnel_R.wav tunnelR;
#X msg 70 110 \; convolveR analyze tunnelR \; convolveL analyze tunnelL
;
#X msg 357 40 \; drywet-set 0;
#X obj 246 48 t b b b;
#X msg 35 214 \; convolveR analyze arundelR \; convolveL analyze arundelL
;
#X msg 389 109 read -resize ./audio/ir-large-chamber_R.wav chamberR
;
#X msg 349 89 read -resize ./audio/ir-large-chamber_L.wav chamberL
;
#X obj 852 145 table chamberL;
#X obj 852 166 table chamberR;
#X msg 55 162 \; convolveR analyze chamberR \; convolveL analyze chamberL
;
#X obj 36 78 sel 0 1 2;
#X obj 36 52 r ir-choo;
#X obj 165 67 del 3000;
#X obj 701 263 * 512;
#X msg 246 208 read -resize ./audio/Arundel_Nave_L2.wav arundelL;
#X msg 286 228 read -resize ./audio/Arundel_Nave_R2.wav arundelR;
#X obj 105 85 del 3000;
#X msg 51 292 \; pd dsp 1;
#X connect 1 0 24 0;
#X connect 2 0 24 0;
#X connect 3 0 16 0;
#X connect 3 0 17 0;
#X connect 4 0 16 0;
#X connect 4 0 17 0;
#X connect 6 0 34 0;
#X connect 7 0 6 0;
#X connect 8 0 16 0;
#X connect 8 0 17 0;
#X connect 9 0 13 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 20 0 0 0;
#X connect 21 0 0 0;
#X connect 24 0 33 0;
#X connect 24 1 35 0;
#X connect 24 1 36 0;
#X connect 24 1 20 0;
#X connect 24 1 21 0;
#X connect 24 1 27 0;
#X connect 24 1 26 0;
#X connect 24 2 23 0;
#X connect 26 0 0 0;
#X connect 27 0 0 0;
#X connect 31 0 25 0;
#X connect 31 1 30 0;
#X connect 31 2 22 0;
#X connect 32 0 31 0;
#X connect 33 0 25 0;
#X connect 33 0 37 0;
#X connect 34 0 4 0;
#X connect 34 0 5 0;
#X connect 35 0 0 0;
#X connect 36 0 0 0;
#X connect 37 0 38 0;
#X restore 19 4 pd init;
#N canvas 0 23 487 359 cpu-meter 0;
#X floatatom 103 122 5 0 0 1 % - -;
#X obj 272 158 cputime;
#X obj 272 130 t b b;
#X obj 272 218 * 0.1;
#X obj 272 187 int;
#X obj 272 105 r globalMetro;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 2 0;
#X coords 0 -1 1 1 85 40 1 100 100;
#X restore 144 12 pd cpu-meter;
#N canvas 243 393 616 307 input 0;
#X msg 213 133 stop;
#X obj 70 40 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X msg 110 31 open ../doc/sound/voice.wav \, start;
#X obj 34 25 adc~;
#X msg 213 110 start;
#X obj 31 280 outlet~;
#X obj 119 283 outlet~;
#X obj 109 120 readsf~ 2;
#X obj 194 261 inmeter input;
#X obj 130 5 inlet;
#X obj 69 6 inlet;
#X obj 44 184 +~;
#X obj 118 180 +~;
#X msg 175 56 open /home/pi/Desktop/convolve_pd/proust_short_mono.wav
\, start;
#X obj 35 122 *~ 1;
#X obj 76 128 *~ 1;
#X connect 0 0 7 0;
#X connect 1 0 14 1;
#X connect 1 0 15 1;
#X connect 2 0 7 0;
#X connect 3 0 14 0;
#X connect 3 1 15 0;
#X connect 4 0 7 0;
#X connect 7 0 12 1;
#X connect 7 0 11 1;
#X connect 9 0 13 0;
#X connect 10 0 1 0;
#X connect 11 0 5 0;
#X connect 11 0 8 0;
#X connect 12 0 6 0;
#X connect 12 0 8 1;
#X connect 13 0 7 0;
#X connect 14 0 11 0;
#X connect 15 0 12 0;
#X restore 15 51 pd input;
#N canvas 0 22 867 578 convolution 0;
#X obj 135 27 inlet~;
#X obj 325 27 inlet~;
#X obj 142 487 outlet~;
#X obj 295 488 outlet~;
#X obj 364 458 inmeter convolution;
#X obj 208 485 outlet~;
#X obj 554 475 outlet~;
#X obj 485 45 r convolveL;
#X obj 584 44 r convolveR;
#X obj 386 204 *~ 0.1;
#X obj 558 199 *~ 0.1;
#X obj 394 236 convolve~ 1024 arundelL;
#X obj 570 236 convolve~ 1024 arundelR;
#X obj 413 288 lop~ 20000;
#X obj 527 279 lop~ 20000;
#X obj 541 361 hip~ 5;
#X obj 421 378 hip~ 5;
#X obj 193 157 r hi;
#X obj 192 274 line;
#X obj 301 276 line;
#X obj 302 159 r lo;
#X obj 192 252 pack 0 100;
#X obj 301 254 pack 0 100;
#X obj 300 209 mtof;
#X obj 192 218 mtof;
#X obj 614 56 r pre;
#X obj 623 99 s pres;
#X obj 623 76 / 1000;
#X floatatom 687 91 10 0 0 0 - - -;
#X obj 612 118 * 44.1;
#X obj 377 178 cyclone/delay~ 44100 0;
#X obj 557 174 cyclone/delay~ 44100 0;
#X obj 695 119 pack 0 100;
#X obj 688 145 line;
#X connect 0 0 2 0;
#X connect 0 0 30 0;
#X connect 1 0 5 0;
#X connect 1 0 31 0;
#X connect 7 0 11 0;
#X connect 8 0 12 0;
#X connect 9 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 14 0;
#X connect 13 0 16 0;
#X connect 14 0 15 0;
#X connect 15 0 6 0;
#X connect 15 0 4 1;
#X connect 16 0 4 0;
#X connect 16 0 3 0;
#X connect 17 0 24 0;
#X connect 18 0 15 1;
#X connect 18 0 16 1;
#X connect 19 0 13 1;
#X connect 19 0 14 1;
#X connect 20 0 23 0;
#X connect 21 0 18 0;
#X connect 22 0 19 0;
#X connect 23 0 22 0;
#X connect 24 0 21 0;
#X connect 25 0 27 0;
#X connect 25 0 29 0;
#X connect 27 0 26 0;
#X connect 29 0 28 0;
#X connect 29 0 32 0;
#X connect 30 0 9 0;
#X connect 31 0 10 0;
#X connect 32 0 33 0;
#X connect 33 0 31 1;
#X connect 33 0 30 1;
#X restore 15 76 pd convolution;
#X obj 20 147 hsl 200 20 0 127 0 0 drywet drywet-set Dry/Wet 75 11
0 12 -228856 -1 -1 0 1;
#N canvas 183 351 364 277 dry/wet 0;
#X obj 11 21 inlet~;
#X obj 55 21 inlet~;
#X obj 102 21 inlet~;
#X obj 146 21 inlet~;
#X obj 11 160 *~;
#X obj 53 160 *~;
#X obj 101 162 *~;
#X obj 150 162 *~;
#X obj 34 212 +~;
#X obj 110 206 +~;
#X obj 32 243 outlet~;
#X obj 110 242 outlet~;
#X msg 209 58 \$1 50;
#X obj 207 81 line~ 0;
#X obj 161 132 cos~;
#X obj 66 131 cos~;
#X obj 203 108 +~ 0.75;
#X obj 208 33 / 400;
#X obj 209 -15 r drywet;
#X obj 206 7 / 1.27;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 8 1;
#X connect 7 0 9 1;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 13 0 16 0;
#X connect 14 0 7 1;
#X connect 14 0 6 1;
#X connect 15 0 5 1;
#X connect 15 0 4 1;
#X connect 16 0 14 0;
#X connect 17 0 12 0;
#X connect 18 0 19 0;
#X connect 19 0 17 0;
#X restore 15 99 pd dry/wet;
#X obj 20 281 vu 10 80 inputL empty -1 -8 0 10 -66577 -1 0 0;
#X obj 42 281 vu 10 80 inputR empty -1 -8 0 10 -66577 -1 0 0;
#X obj 104 282 vu 10 80 convolutionL empty -1 -8 0 10 -66577 -1 0 0
;
#X obj 126 282 vu 10 80 convolutionR empty -1 -8 0 10 -66577 -1 0 0
;
#X obj 185 282 vu 10 80 outputL empty -1 -8 0 10 -66577 -1 0 0;
#X obj 207 282 vu 10 80 outputR empty -1 -8 0 10 -66577 -1 0 0;
#X obj 213 82 vradio 15 1 0 3 ir-choo ir-choo-set IR 0 -8 0 10 -262144
-1 -1 0;
#X text 133 81 arundel nave;
#X text 127 97 large chamber;
#X text 169 113 tunnel;
#X text 17 371 input;
#X text 82 371 convolution;
#X text 179 371 output;
#X obj 59 27 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 14 26 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#N canvas 197 113 597 300 osc 0;
#X obj 119 28 mrpeach/net/udpreceive 20000;
#X obj 119 54 osc/unpackOSC;
#X obj 119 81 osc/pipelist;
#X obj 119 105 osc/routeOSC /verb;
#X obj 75 216 s drywet;
#X obj 90 251 s drywet-set;
#X floatatom 80 174 5 0 127 0 - - -;
#X floatatom 180 174 5 0 127 0 - - -;
#X floatatom 244 171 5 0 127 0 - - -;
#X obj 175 216 s hi;
#X obj 190 251 s hi-set;
#X obj 240 218 s lo;
#X obj 255 253 s lo-set;
#X floatatom 305 165 5 0 0 0 - - -;
#X obj 119 130 osc/routeOSC /drywet /hi /lo /ir /pre;
#X floatatom 396 185 5 0 0 0 - - -;
#X obj 340 246 s ir-choo-set;
#X obj 317 209 s ir-choo;
#X obj 420 227 s pre;
#X obj 443 264 s pre-set;
#X obj 373 157 / 0.127;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 3 0;
#X connect 3 0 14 0;
#X connect 6 0 4 0;
#X connect 6 0 5 0;
#X connect 7 0 9 0;
#X connect 7 0 10 0;
#X connect 8 0 11 0;
#X connect 8 0 12 0;
#X connect 13 0 17 0;
#X connect 13 0 16 0;
#X connect 14 0 6 0;
#X connect 14 1 7 0;
#X connect 14 2 8 0;
#X connect 14 3 13 0;
#X connect 14 4 20 0;
#X connect 15 0 18 0;
#X connect 15 0 19 0;
#X connect 20 0 15 0;
#X restore 97 19 pd osc;
#N canvas 0 22 577 430 output 0;
#X obj 135 31 inlet~;
#X obj 195 34 inlet~;
#X obj 184 351 inmeter output;
#X obj 102 354 dac~;
#X connect 0 0 3 0;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 1 0 2 1;
#X restore 19 123 pd output;
#X obj 20 176 hsl 200 20 0 127 0 1 hi hi-set Hi_Pass 75 11 0 12 -228856
-1 -1 0 1;
#X obj 20 205 hsl 200 20 0 127 0 1 lo lo-set Low_Pass 75 11 0 12 -228856
-1 -1 19900 1;
#X obj 21 232 hsl 200 20 0 1000 0 1 pre pre-set Pre_Delay_(ms) 75 11
0 12 -228856 -1 -1 0 1;
#X floatatom 145 257 5 0 0 0 - pres -;
#N canvas 85 265 826 406 store.state 1;
#X text 253 141 SEND: \$0-<parameter_name>.s;
#X text 253 161 RECEIVE: \$0-<parameter_name>.r;
#X obj 50 82 store.param \$0 number1;
#X obj 50 102 store.param \$0 number2;
#X obj 50 122 store.param \$0 number3;
#X obj 50 142 store.param \$0 slider;
#X obj 50 162 store.param \$0 hradio;
#X obj 50 222 store.array \$0 array1;
#N canvas 81 75 329 237 read.write 0;
#X obj 74 111 savestate;
#X obj 74 91 r \$0-to.savestate;
#X obj 125 131 s \$0-savestate.right;
#X text 78 33 send and receive lists from the individual abstractions
, f 27;
#X obj 74 171 s \$0-savestate.left;
#X obj 74 131 t a b;
#X obj 101 151 s \$0-stop.loadbang;
#X connect 0 0 5 0;
#X connect 0 1 2 0;
#X connect 1 0 0 0;
#X connect 5 0 4 0;
#X connect 5 1 6 0;
#X restore 50 32 pd read.write;
#X obj 50 292 store.text \$0 text1;
#X text 253 341 With this method it's still required to create a new
[store.param] (or [store.array] or [store.text]) abstraction for every
parameter or table to be saved \, but at least there is no need to
patch all the send and receives individually., f 84;
#X text 253 221 Arrays can be saved as well with the [store.array]
object. The first argument is \$0 \, the second is the name of the
array without \$0-. The object on the left will save the content of
a table named "\$0-array1"., f 84;
#X text 253 31 This is the read/write subpatch which should be left
as-is., f 84;
#X text 253 81 In order for a parameter that is in the abstraction
to be saved in the parent patch \, here there needs to be a [store.param]
abstraction with the name of that parameter as the second argument
(whilst the first argument is always \$0). The send and receive symbols
for each parameter must be formated in this way:, f 84;
#X text 253 291 Text objects can be saved in a similar way to arrays
with this object [store.text]., f 84;
#X restore 110 59 pd store.state;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 3 0 5 0;
#X connect 3 1 5 1;
#X connect 3 2 5 2;
#X connect 3 3 5 3;
#X connect 5 0 22 0;
#X connect 5 1 22 1;
#X connect 19 0 2 1;
#X connect 20 0 2 0;
#X coords 0 0 1 1 85 60 0;
