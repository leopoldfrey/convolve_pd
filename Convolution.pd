#N canvas 548 368 243 400 10;
#N canvas 13 193 1077 463 init 0;
#X obj 247 259 soundfiler;
#X obj 247 25 loadbang;
#X obj 217 29 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 711 331 print;
#X msg 702 309 window \$1;
#X floatatom 711 286 10 0 0 1 - - -;
#X obj 701 238 + 1;
#X floatatom 701 214 3 1 30 0 - - -;
#X msg 722 352 flush;
#X obj 866 304 metro 40;
#X obj 864 238 loadbang;
#X msg 864 260 1;
#X obj 865 283 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 865 328 s globalMetro;
#X obj 850 46 table arundelL;
#X obj 850 67 table arundelR;
#X obj 702 377 s convolveL;
#X obj 648 401 s convolveR;
#X obj 850 117 table tunnelR;
#X obj 850 96 table tunnelL;
#X msg 308 148 read -resize ./audio/ir-tunnel_L.wav tunnelL;
#X msg 348 168 read -resize ./audio/ir-tunnel_R.wav tunnelR;
#X msg 70 110 \; convolveR analyze tunnelR \; convolveL analyze tunnelL
;
#X msg 357 40 \; drywet-set 0;
#X obj 246 48 t b b b;
#X msg 35 214 \; convolveR analyze arundelR \; convolveL analyze arundelL
;
#X msg 389 109 read -resize ./audio/ir-large-chamber_R.wav chamberR
;
#X msg 349 89 read -resize ./audio/ir-large-chamber_L.wav chamberL
;
#X obj 852 145 table chamberL;
#X obj 852 166 table chamberR;
#X msg 55 162 \; convolveR analyze chamberR \; convolveL analyze chamberL
;
#X obj 36 78 sel 0 1 2;
#X obj 165 67 del 3000;
#X obj 701 263 * 512;
#X msg 246 208 read -resize ./audio/Arundel_Nave_L2.wav arundelL;
#X msg 286 228 read -resize ./audio/Arundel_Nave_R2.wav arundelR;
#X obj 105 85 del 3000;
#X msg 51 292 \; pd dsp 1;
#X obj 36 52 r \$0-ir.s;
#X connect 1 0 24 0;
#X connect 2 0 24 0;
#X connect 3 0 16 0;
#X connect 3 0 17 0;
#X connect 4 0 16 0;
#X connect 4 0 17 0;
#X connect 6 0 33 0;
#X connect 7 0 6 0;
#X connect 8 0 16 0;
#X connect 8 0 17 0;
#X connect 9 0 13 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 20 0 0 0;
#X connect 21 0 0 0;
#X connect 24 0 32 0;
#X connect 24 1 34 0;
#X connect 24 1 35 0;
#X connect 24 1 20 0;
#X connect 24 1 21 0;
#X connect 24 1 27 0;
#X connect 24 1 26 0;
#X connect 24 2 23 0;
#X connect 26 0 0 0;
#X connect 27 0 0 0;
#X connect 31 0 25 0;
#X connect 31 1 30 0;
#X connect 31 2 22 0;
#X connect 32 0 25 0;
#X connect 32 0 36 0;
#X connect 33 0 4 0;
#X connect 33 0 5 0;
#X connect 34 0 0 0;
#X connect 35 0 0 0;
#X connect 36 0 37 0;
#X connect 38 0 31 0;
#X restore 19 4 pd init;
#N canvas 0 23 487 359 cpu-meter 0;
#X floatatom 103 122 5 0 0 1 % - -;
#X obj 272 158 cputime;
#X obj 272 130 t b b;
#X obj 272 218 * 0.1;
#X obj 272 187 int;
#X obj 272 105 r globalMetro;
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 2 1 1 1;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X connect 5 0 2 0;
#X coords 0 -1 1 1 85 40 1 100 100;
#X restore 144 12 pd cpu-meter;
#N canvas 243 393 616 307 input 0;
#X msg 213 133 stop;
#X obj 70 40 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#X msg 110 31 open ../doc/sound/voice.wav \, start;
#X obj 34 25 adc~;
#X msg 213 110 start;
#X obj 31 250 outlet~;
#X obj 119 253 outlet~;
#X obj 109 120 readsf~ 2;
#X obj 194 231 inmeter input;
#X obj 175 4 inlet;
#X obj 69 6 inlet;
#X obj 44 184 +~;
#X obj 118 180 +~;
#X msg 175 56 open /home/pi/Desktop/convolve_pd/proust_short_mono.wav
\, start;
#X obj 35 122 *~ 1;
#X obj 76 128 *~ 1;
#X connect 0 0 7 0;
#X connect 1 0 14 1;
#X connect 1 0 15 1;
#X connect 2 0 7 0;
#X connect 3 0 14 0;
#X connect 3 1 15 0;
#X connect 4 0 7 0;
#X connect 7 0 12 1;
#X connect 7 0 11 1;
#X connect 9 0 13 0;
#X connect 10 0 1 0;
#X connect 11 0 5 0;
#X connect 11 0 8 0;
#X connect 12 0 6 0;
#X connect 12 0 8 1;
#X connect 13 0 7 0;
#X connect 14 0 11 0;
#X connect 15 0 12 0;
#X restore 15 51 pd input;
#N canvas 0 22 714 578 convolution 0;
#X obj 58 49 inlet~;
#X obj 206 50 inlet~;
#X obj 57 440 outlet~;
#X obj 163 442 outlet~;
#X obj 235 442 inmeter convolution;
#X obj 111 441 outlet~;
#X obj 383 441 outlet~;
#X obj 242 263 r convolveL;
#X obj 413 263 r convolveR;
#X obj 193 261 *~ 0.1;
#X obj 365 258 *~ 0.1;
#X obj 192 293 convolve~ 1024 arundelL;
#X obj 364 294 convolve~ 1024 arundelR;
#X obj 193 348 lop~ 20000;
#X obj 363 347 lop~ 20000;
#X obj 362 393 hip~ 5;
#X obj 193 394 hip~ 5;
#X obj 617 347 line;
#X obj 542 298 line;
#X obj 617 325 pack 0 100;
#X obj 542 276 pack 0 100;
#X obj 541 247 mtof;
#X obj 614 299 mtof;
#X obj 506 86 s pres;
#X obj 506 60 / 1000;
#X floatatom 507 143 10 0 0 0 - - -;
#X obj 495 117 * 44.1;
#X obj 193 231 cyclone/delay~ 44100 0;
#X obj 364 229 cyclone/delay~ 44100 0;
#X obj 493 167 pack 0 100;
#X obj 492 190 line;
#X obj 496 34 r \$0-pre.s;
#X obj 541 223 r \$0-lo.s;
#X obj 614 270 r \$0-hi.s;
#X connect 0 0 2 0;
#X connect 0 0 27 0;
#X connect 1 0 5 0;
#X connect 1 0 28 0;
#X connect 7 0 11 0;
#X connect 8 0 12 0;
#X connect 9 0 11 0;
#X connect 10 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 14 0;
#X connect 13 0 16 0;
#X connect 14 0 15 0;
#X connect 15 0 6 0;
#X connect 15 0 4 1;
#X connect 16 0 4 0;
#X connect 16 0 3 0;
#X connect 17 0 15 1;
#X connect 17 0 16 1;
#X connect 18 0 13 1;
#X connect 18 0 14 1;
#X connect 19 0 17 0;
#X connect 20 0 18 0;
#X connect 21 0 20 0;
#X connect 22 0 19 0;
#X connect 24 0 23 0;
#X connect 26 0 25 0;
#X connect 26 0 29 0;
#X connect 27 0 9 0;
#X connect 28 0 10 0;
#X connect 29 0 30 0;
#X connect 30 0 28 1;
#X connect 30 0 27 1;
#X connect 31 0 24 0;
#X connect 31 0 26 0;
#X connect 32 0 21 0;
#X connect 33 0 22 0;
#X restore 15 76 pd convolution;
#X obj 20 147 hsl 200 20 0 127 0 1 \$0-drywet.s \$0-drywet.r Dry/Wet
75 11 0 12 -228856 -1 -1 11125 1;
#N canvas 183 441 364 305 dry/wet 0;
#X obj 11 21 inlet~;
#X obj 55 21 inlet~;
#X obj 102 21 inlet~;
#X obj 146 21 inlet~;
#X obj 11 160 *~;
#X obj 53 160 *~;
#X obj 101 162 *~;
#X obj 150 162 *~;
#X obj 34 212 +~;
#X obj 110 206 +~;
#X obj 32 243 outlet~;
#X obj 110 242 outlet~;
#X msg 209 58 \$1 50;
#X obj 207 81 line~ 0;
#X obj 161 132 cos~;
#X obj 66 131 cos~;
#X obj 203 108 +~ 0.75;
#X obj 208 33 / 400;
#X obj 206 7 / 1.27;
#X obj 205 -17 r \$0-drywet.s;
#X connect 0 0 4 0;
#X connect 1 0 5 0;
#X connect 2 0 6 0;
#X connect 3 0 7 0;
#X connect 4 0 8 0;
#X connect 5 0 9 0;
#X connect 6 0 8 1;
#X connect 7 0 9 1;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 13 0 16 0;
#X connect 14 0 7 1;
#X connect 14 0 6 1;
#X connect 15 0 5 1;
#X connect 15 0 4 1;
#X connect 16 0 14 0;
#X connect 17 0 12 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X restore 15 99 pd dry/wet;
#X obj 20 281 vu 10 80 inputL empty -1 -8 0 10 -66577 -1 0 0;
#X obj 42 281 vu 10 80 inputR empty -1 -8 0 10 -66577 -1 0 0;
#X obj 104 282 vu 10 80 convolutionL empty -1 -8 0 10 -66577 -1 0 0
;
#X obj 126 282 vu 10 80 convolutionR empty -1 -8 0 10 -66577 -1 0 0
;
#X obj 185 282 vu 10 80 outputL empty -1 -8 0 10 -66577 -1 0 0;
#X obj 207 282 vu 10 80 outputR empty -1 -8 0 10 -66577 -1 0 0;
#X obj 213 82 vradio 15 1 1 3 \$0-ir.s \$0-ir.r IR 0 -8 0 10 -262144
-1 -1 1;
#X text 133 81 arundel nave;
#X text 127 97 large chamber;
#X text 169 113 tunnel;
#X text 17 371 input;
#X text 82 371 convolution;
#X text 179 371 output;
#X obj 59 27 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 14 26 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1
;
#N canvas 197 113 597 300 osc 0;
#X obj 119 28 mrpeach/net/udpreceive 20000;
#X obj 119 54 osc/unpackOSC;
#X obj 119 81 osc/pipelist;
#X obj 119 105 osc/routeOSC /verb;
#X floatatom 95 168 5 0 127 0 - - -;
#X floatatom 180 169 5 0 127 0 - - -;
#X floatatom 244 171 5 0 127 0 - - -;
#X floatatom 305 170 5 0 0 0 - - -;
#X obj 119 130 osc/routeOSC /drywet /hi /lo /ir /pre;
#X floatatom 368 194 5 0 0 0 - - -;
#X obj 368 169 / 0.127;
#X obj 244 195 s \$0-lo.r;
#X obj 305 194 s \$0-ir.r;
#X obj 369 220 s \$0-pre.r;
#X obj 180 195 s \$0-hi.r;
#X obj 94 195 s \$0-drywet.r;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 3 0;
#X connect 3 0 8 0;
#X connect 4 0 15 0;
#X connect 5 0 14 0;
#X connect 6 0 11 0;
#X connect 7 0 12 0;
#X connect 8 0 4 0;
#X connect 8 1 5 0;
#X connect 8 2 6 0;
#X connect 8 3 7 0;
#X connect 8 4 10 0;
#X connect 9 0 13 0;
#X connect 10 0 9 0;
#X restore 97 19 pd osc;
#N canvas 0 22 577 430 output 0;
#X obj 83 50 inlet~;
#X obj 143 53 inlet~;
#X obj 134 135 inmeter output;
#X obj 52 138 dac~;
#X connect 0 0 3 0;
#X connect 0 0 2 0;
#X connect 1 0 3 1;
#X connect 1 0 2 1;
#X restore 19 123 pd output;
#X obj 20 176 hsl 200 20 0 127 0 1 \$0-hi.s \$0-hi.r Hi_Pass 75 11
0 12 -228856 -1 -1 6268 1;
#X obj 20 205 hsl 200 20 0 127 0 1 \$0-lo.s \$0-lo.r Low_Pass 75 11
0 12 -228856 -1 -1 15983 1;
#X obj 21 232 hsl 200 20 0 1000 0 1 \$0-pre.s \$0-pre.r Pre_Delay_(ms)
75 11 0 12 -228856 -1 -1 3291 1;
#X floatatom 145 257 5 0 0 0 - pres -;
#N canvas 85 265 826 406 store.state 0;
#X text 253 141 SEND: \$0-<parameter_name>.s;
#X text 253 161 RECEIVE: \$0-<parameter_name>.r;
#N canvas 81 75 329 237 read.write 0;
#X obj 74 111 savestate;
#X obj 74 91 r \$0-to.savestate;
#X obj 125 131 s \$0-savestate.right;
#X text 78 33 send and receive lists from the individual abstractions
, f 27;
#X obj 74 171 s \$0-savestate.left;
#X obj 74 131 t a b;
#X obj 101 151 s \$0-stop.loadbang;
#X connect 0 0 5 0;
#X connect 0 1 2 0;
#X connect 1 0 0 0;
#X connect 5 0 4 0;
#X connect 5 1 6 0;
#X restore 50 32 pd read.write;
#X text 253 341 With this method it's still required to create a new
[store.param] (or [store.array] or [store.text]) abstraction for every
parameter or table to be saved \, but at least there is no need to
patch all the send and receives individually., f 84;
#X text 253 221 Arrays can be saved as well with the [store.array]
object. The first argument is \$0 \, the second is the name of the
array without \$0-. The object on the left will save the content of
a table named "\$0-array1"., f 84;
#X text 253 31 This is the read/write subpatch which should be left
as-is., f 84;
#X text 253 81 In order for a parameter that is in the abstraction
to be saved in the parent patch \, here there needs to be a [store.param]
abstraction with the name of that parameter as the second argument
(whilst the first argument is always \$0). The send and receive symbols
for each parameter must be formated in this way:, f 84;
#X text 253 291 Text objects can be saved in a similar way to arrays
with this object [store.text]., f 84;
#X obj 50 82 store.param \$0 hi;
#X obj 50 102 store.param \$0 lo;
#X obj 50 122 store.param \$0 drywet;
#X obj 50 142 store.param \$0 pre;
#X obj 50 162 store.param \$0 ir;
#N canvas 0 50 450 300 store.array 0;
#X restore 50 222 pd store.array \$0 array1;
#N canvas 0 50 450 300 store.text 0;
#X restore 50 292 pd store.text \$0 text1;
#X restore 110 59 pd store.state;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 3 0 5 0;
#X connect 3 1 5 1;
#X connect 3 2 5 2;
#X connect 3 3 5 3;
#X connect 5 0 22 0;
#X connect 5 1 22 1;
#X connect 20 0 2 0;
#X coords 0 0 1 1 85 60 0;
